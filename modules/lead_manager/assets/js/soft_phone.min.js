var n = $("#staffPhoneNumber").val(),
    e = "",
    a = !1,
    o = null,
    l = null,
    i = 0,
    s = 0,
    t = 0,
    c = null,
    d = function(n) { $(".ringing").removeClass("-ringing"), setTimeout((function() { $(".ringing").addClass("-flip"), $("#speaking-soft-phone").addClass("show_cut_btn"), $(".speaking").removeClass("flipback") }), 0), n = $("#showContact").val() ? n : "******" + String(n).slice(-4), $("#caller-info").html(n) },
    r = function(n) { $(".dialing").removeClass("-dialing"), setTimeout((function() { $(".dialing").addClass("-flip"), $("#speaking-soft-phone").addClass("show_cut_btn"), $(".speaking").removeClass("flipback") }), 0), $("#caller-info").html(n) };
$("#refuse").click((function() { $(".ringing").removeClass("-ringing"), $(".ringing").addClass("-drop"), setTimeout((function() { $(".ringing").addClass("-fadeout") }), 0), setTimeout((function() { $(".ringing").addClass("-ringing").removeClass("-fadeout") }), 1e4) }));
var f = function() { $("#hold-btn").hasClass("hold") && ($("#hold-btn").removeClass("hold"), $("#hold-btn").addClass("_hold")), $("#hold-btn").show(), clearTimeout(c), i = 0, s = 0, t = 0, $("#hours").html("00:"), $("#mins").html("00:"), $("#seconds").html("00"), !1, a = !1, $(".speaking").addClass("-drop"), setTimeout((function() { $("#speaking-soft-phone").removeClass("show_cut_btn"), $(".ringing").removeClass("-flip"), $(".speaking").addClass("flipback").removeClass("hold").removeClass("-drop") }), 2e3), $("#confrence-btn").removeClass("confrence").addClass("_confrence"), $(".conference_list").find("ul").html(""), !1 },
    u = function() { $(".ringing").addClass("-drop"), setTimeout((function() { $(".ringing").removeClass("-drop"), $(".ringing").css("display", "") }), 2e3) },
    m = function(n) { n ? ($(".fa-ban").addClass("hidden"), $("#eq").removeClass("hidden")) : ($(".fa-ban").removeClass("hidden"), $("#eq").addClass("hidden")) },
    p = function(n, e = "") { n.hasClass("_hold") ? ($("#confrence-btn").addClass("hidden"), $.post(site_url + "lead_manager/call_control/holdCall", { CallSid: e }, (function(n) {!0 })), $("#hold-btn").removeClass("_hold"), $("#hold-btn").addClass("hold")) : ($("#confrence-btn").removeClass("hidden"), $.post(site_url + "lead_manager/call_control/unholdCall", { CallSid: e }, (function(n) {!1 })), $("#hold-btn").removeClass("hold"), $("#hold-btn").addClass("_hold"), $("#hold-btn").hide()) },
    g = function(e, o) { e.hasClass("_confrence") ? ($("#hold-btn").closest("li.action").addClass("hidden"), $.post(site_url + "lead_manager/call_control/confrenceCall", { CallSid: o, callerIdNumber: n }, (function(n) { n = JSON.parse(n), a = n.status, $("#speaking-soft-phone").find("#caller-info").html("Confrence call"); var e = '<li> <div><i class="fa fa-user"></i>  ' + n.number + '</div><div class="conference_list_action" data-callsid="' + n.callSid + '" data-friendlyname="' + n.status + '"> <span onclick="updateConfrence(this);" data-action="mute"><i class="fa fa-microphone" ></i></span><span onclick="updateConfrence(this);" data-action="hold"><i class="fa fa-pause"></i></span><span class="cnfrc_decline" onclick="deleteConfrence(this);"><i class="fa fa-phone decline-icon"></i></span></div></li>';
            $("#speaking-soft-phone").find(".conference_list ul").append(e), $(".conference_list").removeClass("hidden") })), e.removeClass("_confrence").addClass("confrence")) : ($("#hold-btn").closest("li.action").removeClass("hidden"), f()) };

function h(n) { console.log(n) }

function C() { $.post(admin_url + "lead_manager/generateClientToken", { forPage: window.location.pathname }).done((function(a) { o = new Twilio.Device; let i = JSON.parse(a);
        o.setup(i.token, { debug: !0, allowIncomingWhileBusy: !0, closeProtection: !0 }),
            function(a) { a.on("ready", (function(n) { h("Ready") })), a.on("error", (function(n) { alert_float("danger", "Error: " + n.message), $("#dialing-soft-phone").css("display", "none"), f(), "31205" != n.code && "31204" != n.code || location.reload() })), a.on("connect", (function(n) {!0, l = n, setTimeout((function() { "open" == n.status() && (_(), h("In call with " + n.message.phoneNumber), r(n.message.phoneNumber)) }), 1e3), $(".sound").click((function() { let e = n.isMuted();
                        n.mute(!e), m(e) })), $("#drop").click((function() { n.disconnect(), f(), u(), $("#dialer_modal").hide() })), $("#hold-btn").click((function() { var e = n.parameters.CallSid;
                        p($(this), e) })), $("#confrence-btn").click((function() { g($(this), n.parameters.CallSid) })) })), a.on("disconnect", (function(n) { f(), h("Ready") })), a.on("incoming", (function(a) { a.parameters.From; let o = a.parameters.CallSid;
                    a.parameters.To; var i, s;
                    l = a, _(), i = o, s = n, $.post(admin_url + "lead_manager/call_control/getFromNumberByChildCallSid", { CallSid: i }).done((function(n) { n = JSON.parse(n), s === n.to && (e = n.from, $("#ringing-soft-phone").find("#calling-info p").html(n.from), $("#ringing-soft-phone").show()) })).fail((function() { console.log("failed!") })), a.accept((function() {!0, h("In call with customer " + e) })), a.reject((function() { f(), h("incoming Call Rejected!") })), a.ignore((function() { u(), h("incoming Call Ignored!") })), a.disconnect((function() { f(), u(), h("incoming Call disconnected") })), $("#accept").click((function() { a.accept(), d(e) })), $("#refuse").click((function() { a.reject(), u(), h("incoming Call Ignored by agent") })) })) }(o) })).fail((function() { h("Could not get a token from server!") })) }

function _() { c = setTimeout((function() {++t > 59 && (t = 0, ++s > 59 && (s = 0, ++i < 10 ? $("#hours").text("0" + i + ":") : $("#hours").text(i + ":")), s < 10 ? $("#mins").text("0" + s + ":") : $("#mins").text(s + ":")), t < 10 ? $("#seconds").text("0" + t) : $("#seconds").text(t), _() }), 1e3) }
$((function() { $("#soft-phone-draggable").draggable() })), $("#disconnect").click((function() { f(), $("#dialing-soft-phone").css("display", "") })), $(document).ready((function() { C() })), $("#dial_pad").click((function() { $("#dialer_modal").toggle() })), $("#call-transfer-btn").click((function() { $("#transfer_staff_modal").toggle() })), $("#add-cnf-call-btn").click((function() { $.post(admin_url + "lead_manager/call_control/addConfParticep", { callerIdNumber: $("#staffPhoneNumber").val(), phoneNumber: $(this).siblings("input").val(), freindlyName: a }).done((function(n) { if ("error" in (n = JSON.parse(n))) alert_float("danger", n.error);
        else { var e = '<li> <div><i class="fa fa-user"></i>  ' + n.number + '</div><div class="conference_list_action" data-callsid="' + n.callSid + '" data-friendlyname="' + a + '"> <span onclick="updateConfrence(this);" data-action="mute"><i class="fa fa-microphone" ></i></span><span onclick="updateConfrence(this);" data-action="hold"><i class="fa fa-pause"></i></span><span class="cnfrc_decline" onclick="deleteConfrence(this);"><i class="fa fa-phone decline-icon"></i></span></div></li>';
            $("#speaking-soft-phone").find(".conference_list ul").append(e), $(".conference_list").removeClass("hidden"), $("#dialer_modal").toggle() }
        $("#add-cnf-call-btn").siblings("input").val("") })).fail((function() { h("Could not get a token from server!") })) })), $("#transfer-btn").click((function(e) { console.log($("#transfer_staff").val()), $.post(site_url + "lead_manager/call_control/transferCall", { staffid: $("#transfer_staff").val(), callerIdNumber: n, calleeNumber: l.message.phoneNumber }, (function(n) { n = JSON.parse(n), console.log(n) })) }));